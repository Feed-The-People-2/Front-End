
[{"/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/reportWebVitals.js":"1","/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/MainPage/MainPage.js":"2","/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/SignIn/SignInPage.js":"3","/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/ProfilePage/ProfilePage.js":"4","/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/CallToAction/CallToAction.js":"5","/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/RecipeCard/RecipeCard.js":"6","/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/RecipeForm/RecipeForm.js":"7","/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/App/App.js":"8","/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/Footer/Footer.js":"9","/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/CheckoutForm/Checkout.js":"10","/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/CheckoutForm/CheckoutForm.js":"11","/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/APICalls.js":"12","/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/RecipePage/RecipePage.js":"13","/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/SignUp/SignUpPage.js":"14","/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/RecipeBook/RecipeBook.js":"15","/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/Profile/Profile.js":"16"},{"size":362,"mtime":1609867845379,"results":"17","hashOfConfig":"18"},{"size":1838,"mtime":1611761760513,"results":"19","hashOfConfig":"18"},{"size":2354,"mtime":1611761760516,"results":"20","hashOfConfig":"18"},{"size":423,"mtime":1610655824806,"results":"21","hashOfConfig":"18"},{"size":1213,"mtime":1611761760512,"results":"22","hashOfConfig":"18"},{"size":1795,"mtime":1611761760514,"results":"23","hashOfConfig":"18"},{"size":7049,"mtime":1611761760515,"results":"24","hashOfConfig":"18"},{"size":4270,"mtime":1611761760511,"results":"25","hashOfConfig":"18"},{"size":535,"mtime":1611761760512,"results":"26","hashOfConfig":"18"},{"size":536,"mtime":1612029155993,"results":"27","hashOfConfig":"18"},{"size":2219,"mtime":1612032827995,"results":"28","hashOfConfig":"18"},{"size":12325,"mtime":1611767556794,"results":"29","hashOfConfig":"18"},{"size":3871,"mtime":1612029609438,"results":"30","hashOfConfig":"18"},{"size":4664,"mtime":1611761760517,"results":"31","hashOfConfig":"18"},{"size":3163,"mtime":1611761760514,"results":"32","hashOfConfig":"18"},{"size":1418,"mtime":1610724260948,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"aoa9k4",{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},"/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/reportWebVitals.js",[],["77","78"],"/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/MainPage/MainPage.js",["79","80","81"],"import './MainPage.css';\nimport profile from '../../icons/user-icon.svg'\nimport recipeBook from '../../icons/recipe-book-icon.svg'\nimport {Link} from 'react-router-dom'\nimport { getUser } from '../../APICalls.js'\nimport RecipeCard from '../RecipeCard/RecipeCard'\nimport Footer from '../Footer/Footer'\nimport {useEffect} from 'react'\nfunction MainPage(props) {\n  let recipeDisplay;\n  if (props.allRecipes){\n    //this functionality could be simplified and escelated to where the API call happens\n    recipeDisplay = props.allRecipes.map((recipe, index)=> {\n      // Maybe look at refactoring to accept an object and have recipe card deconstruct said opbject\n      return (\n        <RecipeCard\n        charityName={recipe.charityName}\n        description={recipe.description}\n        key={index}\n        id={recipe.id}\n        recipeId={recipe.id}\n        image={recipe.image}\n        title={recipe.title}\n        rating={recipe.avgRating}\n        userId={recipe.userId}\n        recipe={recipe}\n        />\n      )\n    })\n  }\n  let updateUser = async (id) => {\n    let response = await getUser(id)\n    let userInfo = JSON.stringify(response.data.getUser)\n    localStorage.setItem('user', userInfo)\n  }\n\n  useEffect(() => {\n    let user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      updateUser(user.id)\n    }\n  })\n  return (\n    <div className=\"MainPage\">\n      <section data-testid='mainPage' className='main-recipe-section'>\n        {/*Maybe look at having a prop passed down containing either recipes, loading message, or error message?*/}\n        {props.loading ? <h2> Loading Global Recipes...</h2> : recipeDisplay}\n      </section>\n      <Footer\n        path1='/recipebook'\n        path2='/profilepage'\n        label1=\"My Recipe Book\"\n        label2='My Profile'\n      />\n    </div>\n  );\n}\n\nexport default MainPage;\n","/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/SignIn/SignInPage.js",["82"],"import './SignInPage.css'\nimport {Link, Redirect} from 'react-router-dom'\nimport { Component } from 'react';\nimport Footer from '../Footer/Footer'\n\nimport { userSignIn } from '../../APICalls.js'\n\nclass SignInPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      redirect: false\n    }\n  }\n  //refactor to include hooks\n  //Look at how best to handle this redirect\n\n  disableForm() {\n    if (this.state.username &&\n        this.state.password) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  updateInput = (e) => {\n    let type = e.target.className\n    let value = e.target.value\n    this.setState({[type]: value})\n  }\n\n  submitForm = async (e) => {\n    e.preventDefault()\n    if (this.state.username.length && this.state.password.length) {\n      let response = await userSignIn(this.state.username, this.state.password)\n      if (response.errors) {\n        alert('Something went wrong... try again?')\n      } else {\n        let userInfo = JSON.stringify(response.data.userSignIn.user)\n        localStorage.setItem('userToken', response.data.userSignIn.token)\n        localStorage.setItem('user', userInfo)\n        this.setState({redirect: true})\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"SignInPage\">\n      <div className='action-area'>\n        <h1 data-testid='signInPrompt'> Welcome Back! Sign In Below: </h1>\n        <form>\n          <center>\n            <table id=\"simple-board\">\n              <tr id=\"row0\">\n                <td id=\"cell0-0\"><label>Username</label></td>\n                <td id=\"cell0-1\"><input type='text' onChange={this.updateInput} className='username'/></td>\n              </tr>\n              <tr id=\"row1\">\n                <td id=\"cell1-0\"><label>Password</label></td>\n                <td id=\"cell1-1\"><input type='password' onChange={this.updateInput} className='password'/></td>\n              </tr>\n            </table>\n            <br/><button type='submit' disabled={this.disableForm()} onClick={this.submitForm}> Submit </button>\n          </center>\n        </form>\n      </div>\n      {this.state.redirect && <Redirect to=\"/profilepage\"/>}\n      <Footer\n      path1='/signup'\n      path2='/'\n      label1='Sign Up'\n      label2=\"Take Me Back\"\n      />\n      </div>\n    );\n  }\n}\n\nexport default SignInPage;\n","/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/ProfilePage/ProfilePage.js",[],"/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/CallToAction/CallToAction.js",[],"/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/RecipeCard/RecipeCard.js",["83","84","85","86","87"],"/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/RecipeForm/RecipeForm.js",["88"],"/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/App/App.js",["89","90","91","92","93","94","95","96","97","98","99","100","101"],"// do we want to determine an code best practices for import order and placement?\n\nimport './App.css';\nimport { Component } from 'react';\nimport MainPage from '../MainPage/MainPage'\nimport SignInPage from '../SignIn/SignInPage'\nimport SignUpPage from '../SignUp/SignUpPage'\nimport RecipePage from '../RecipePage/RecipePage'\nimport ProfilePage from '../ProfilePage/ProfilePage'\nimport RecipeBook from '../RecipeBook/RecipeBook'\nimport RecipeForm from '../RecipeForm/RecipeForm'\n// working\n//Which imports do we actually need here?\n//Do we actually need all of these calls?\nimport { getAllRecipes } from '../../APICalls.js'\nimport { getUserWithRecipes } from '../../APICalls.js'\nimport { recipeById } from '../../APICalls.js'\nimport { getUser } from '../../APICalls.js'\nimport { createIngredient } from '../../APICalls.js'\nimport { createUserRecipe } from '../../APICalls.js'\nimport { updateUserRecipeRating } from '../../APICalls.js'\nimport { searchNonProfits } from '../../APICalls.js'\nimport { registerUser } from '../../APICalls.js'\nimport { userSignIn } from '../../APICalls.js'\nimport { createRecipe } from '../../APICalls.js'\n\n// Need autopopulated form\n// Good to know this is functionality we still need.\nimport { updateUser } from '../../APICalls.js'\nimport { updateIngredient } from '../../APICalls.js'\nimport { updateRecipe } from '../../APICalls.js'\n\n\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nclass App extends Component {\n  //How could we refactor this using hoooks?\n  //Are we using all of these states?\n  //Do we want to impliment prop types?\n  constructor(props) {\n    super(props);\n    this.state = {\n      signedIn: false,\n      user: '',\n      allRecipes: [],\n      loading: true,\n    }\n  }\n  async componentDidMount() {\n    const response = await getAllRecipes()\n    this.setState({allRecipes: response.allRecipes, loading: false})\n  }\n\n  render() {\n    // working\n    // console.log(getAllRecipes())\n    // getUserWithRecipes(84)\n    // recipeById(1)\n    // getUser(1)\n    // searchNonProfits(\"Food Bank of the Rockies\")\n    // createUserRecipe(1, 3, 2.5)\n    // createIngredient(1, \"name\", \"amount\")\n    // updateUserRecipeRating(1, 4)\n    // registerUser(\"John\", \"Doe\", \"JD@gmail.com\", \"a street\", \"a city\", \"a state\", \"a zip\", \"an image\", \"new user\", \"1234\")\n    // userSignIn(\"mr_cook\", \"123\")\n    // createRecipe(1, \"https://food.fnr.sndimg.com/content/dam/images/food/fullset/2019/7/11/0/FNK_the-best-chicken-parmesan_H_s4x3.jpg.rend.hgtvcom.826.620.suffix/1562853897238.jpeg\", \"Chicken Parmesan\", \"A classic favorite\", \"1. chicken 2.???? 3. profit\", \"533423\", \"Give Logan Money\", [{name:\"Chicken\",amount:\"2 lbs\"},{name:\"Parmesan\",amount:\"5 gallons\"}])\n\n    // Must have form fields autopopulated in order for these to work\n    // updateUser()\n    // updateIngredient()\n    // updateRecipe(93,\n    //             \"https://www.tasteofhome.com/wp-content/uploads/2018/01/Ginger-Pork-Stir-Fry_EXPS_QEBZ20_17024_E01_23_3b.jpg\",\n    //             \"Easy Stir-Fry\",\n    //             \"It's actually not easy\",\n    //             \"Updated instructions\",\n    //             \"4593516\",\n    //             \"HUNGRY NO MORE\")\n\n    return (\n      <BrowserRouter>\n      {/*Do we want to refactor all routes to include a render?*/}\n      {/*Escelate the BrowserRouter to the index.js level?*/}\n      <Switch>\n        <div className=\"App\">\n          <Route path='/signin'>\n            <SignInPage />\n          </Route>\n          <Route path='/signup'>\n            <SignUpPage />\n          </Route>\n          <Route\n             path='/recipepage/:recipeId'\n             render={({match})=>{\n               const recipeId = match.params.recipeId\n               return (\n                 <RecipePage id={recipeId} />\n               )\n           }}/>\n          <Route path='/profilepage'>\n            <ProfilePage />\n          </Route>\n          <Route path='/recipebook'>\n            <RecipeBook />\n          </Route>\n          <Route path='/recipeform'>\n            <RecipeForm />\n          </Route>\n          <Route exact path='/'>\n            <MainPage allRecipes={this.state.allRecipes} loading={this.state.loading}/>\n          </Route>\n        </div>\n      </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n",["102","103"],"/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/Footer/Footer.js",[],"/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/CheckoutForm/Checkout.js",[],"/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/CheckoutForm/CheckoutForm.js",["104","105"],"/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/APICalls.js",[],"/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/RecipePage/RecipePage.js",["106"],"import './RecipePage.css';\nimport { Component } from 'react';\nimport CallToAction from '../CallToAction/CallToAction.js'\nimport Checkout from '../CheckoutForm/Checkout.js'\nimport { recipeById, getUserWithRecipes, getAccessToRecipe } from '../../APICalls.js'\nimport Footer from '../Footer/Footer'\n\nclass RecipePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      purchased: false,\n      user: '',\n      allRecipes: [],\n      loading: true,\n    }\n  }\n  //This component has similar comments as Recipe form\n  //We need a refactor to hooks and to look at breaking apart functionality\n  //I feel like this should have less logic and get more data from local storage\n  getRecipe = async (id) => {\n    let user = JSON.parse(localStorage.getItem('user'))\n    let response = await recipeById(id)\n    let recipe = response.recipeById\n    this.setState({recipe: recipe})\n    this.getPurchasedRecipes(user.id)\n  }\n  getPurchasedRecipes = async (id) => {\n    let response = await getUserWithRecipes(id)\n    let updatedUserInfo = JSON.stringify(response.getUser)\n    localStorage.setItem('user', updatedUserInfo)\n    let foundUserRecipe = response.getUser.userRecipes.find(recipe => recipe.recipeId === this.state.recipe.id)\n    let foundRecipe = response.getUser.recipes.find(recipe => recipe.id === this.state.recipe.id)\n    if(foundRecipe || foundUserRecipe){\n      this.setState({purchased: true})\n    } else {\n      this.setState({purchased: false})\n    }\n  }\n  buildIngredients = () => {\n    let list = this.state.recipe.ingredients.map(ingredient => {\n      return <li>{ingredient.amount}: {ingredient.name} </li>\n    })\n    return (\n      <ul>\n        {list}\n      </ul>\n    )\n  }\n\n  // buildInstructions = () => {\n  //   let steps = this.state.recipe.instructions.split(\"\\n\").map((item, key) => {\n  //   return <span key={key}>{item}<br/></span>\n  // })\n  // }\n\n  componentDidMount(){\n    let user = JSON.parse(localStorage.getItem('user'))\n    if(user) {\n      this.getRecipe(this.props.id)\n    }\n  }\n  render(){\n    let user = JSON.parse(localStorage.getItem('user'))\n    if (!user) {\n      return <CallToAction title='You need to be signed in to view this recipe...' />\n    } else if (this.state.recipe && this.state.purchased){\n      return (\n        <div className=\"RecipePage\">\n          <section className='left-section'>\n            <div className='leftHeader'>\n              <h1 className='recipe-name'>{this.state.recipe.title}</h1>\n            </div>\n            <img className='recipe-image' src={this.state.recipe.image} alt='A dish of egg, bread, and other assorted garnishes' />\n          </section>\n\n          <section className='right-section'>\n            <section className='details'>\n          <section className=\"ingredients-section\">\n          <div className='ingredientHeader'>\n              <h1>Ingredients:</h1>\n            </div>\n            {this.buildIngredients()}\n          </section>\n            <section className='instructions-section'>\n            <div className='instructionsHeader'>\n              <h1>Instructions:</h1>\n            </div>\n            {/* {this.buildInstructions} */}\n            <p>{this.state.recipe.instructions}</p>\n            </section>\n            </section>\n      </section>\n\n          <Footer\n            path1='/recipebook'\n            path2='/profilepage'\n            label1=\"My Recipe Book\"\n            label2='My Profile'\n            className='RecipeBook-Footer'\n          />\n        </div>\n      );\n    } else {\n      return (\n      <div className=\"RecipePage\">\n      {!this.state.purchased && <Checkout recipe={this.state.recipe}/>}\n      <Footer\n        path1='/recipebook'\n        path2='/profilepage'\n        label1=\"My Recipe Book\"\n        label2='My Profile'\n        className='RecipeBook-Footer'\n      />\n      </div>\n    )\n    }\n  }\n}\n\nexport default RecipePage;\n","/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/SignUp/SignUpPage.js",["107"],"import './SignUpPage.css'\nimport {Link, Redirect} from 'react-router-dom'\nimport { Component } from 'react';\nimport { registerUser } from '../../APICalls.js'\nimport Footer from '../Footer/Footer'\n\nclass SignUpPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username:'',\n      image:'',\n      firstName:'',\n      lastName:'',\n      email: '',\n      password: '',\n      street: '',\n      city: '',\n      state: '',\n      zip: '',\n      redirect: false,\n    }\n  }\n  //Look at refactoring to hooks and adjust all the form inputs to not be state\n  //Look at implimenting images\n  //Have sad path handling to show the loading\n  disableForm() {\n    if (this.state.username &&\n        this.state.image &&\n        this.state.firstName &&\n        this.state.lastName &&\n        this.state.email &&\n        this.state.password &&\n        this.state.street &&\n        this.state.city &&\n        this.state.state &&\n        this.state.zip) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  updateInput = (e) => {\n    let type = e.target.className\n    let value = e.target.value\n    this.setState({[type]: value})\n  }\n\n  submitForm = async (e) => {\n    e.preventDefault()\n    let response = await registerUser(\n      this.state.firstName,\n      this.state.lastName,\n      this.state.email,\n      this.state.street,\n      this.state.city,\n      this.state.state,\n      this.state.zip,\n      this.state.image,\n      this.state.username,\n      this.state.password,\n    );\n    if(response.error) {\n      alert('Something went wrong, please try again')\n    } else {\n      alert('Success! Log in to your new account!')\n      this.setState({redirect: true})\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"SignUpPage\">\n        <div className='action-area'>\n          <h1>Welcome to Feed The People</h1>\n          <p>We need a little information from you below to make an account of\n          your own and join our community!</p><br/>\n          <form className='SignUp-form'>\n            <table id=\"simple-board\">\n              <tr id=\"row0\">\n                <td id=\"cell0-0\"><label>Username</label></td>\n                <td id=\"cell0-1\"><input className='username'type='text' onChange={this.updateInput}/></td>\n              </tr>\n              <tr id=\"row1\">\n                <td id=\"cell1-0\"><label>Password</label></td>\n                <td id=\"cell1-1\"><input className='password' type='text' onChange={this.updateInput}/></td>\n              </tr>\n              <tr id=\"row2\">\n                <td id=\"cell2-0\"><label>Image URL</label></td>\n                <td id=\"cell2-1\"><input className='image'type='text' onChange={this.updateInput}/></td>\n              </tr>\n              <tr id=\"row3\">\n                <td id=\"cell3-0\"><label>First Name</label></td>\n                <td id=\"cell3-1\"><input className='firstName'type='text' onChange={this.updateInput}/></td>\n              </tr>\n              <tr id=\"row4\">\n                <td id=\"cell4-0\"><label>Last Name</label></td>\n                <td id=\"cell4-1\"><input className='lastName'type='text' onChange={this.updateInput}/></td>\n              </tr>\n              <tr id=\"row5\">\n                <td id=\"cell5-0\"><label>Email</label></td>\n                <td id=\"cell5-1\"><input className='email'type='email' onChange={this.updateInput}/></td>\n              </tr>\n              <tr id=\"row6\">\n                <td id=\"cell6-0\"><label>Street</label></td>\n                <td id=\"cell6-1\"><input className='street'type='text' onChange={this.updateInput}/></td>\n              </tr>\n              <tr id=\"row7\">\n                <td id=\"cell7-0\"><label>City</label></td>\n                <td id=\"cell7-1\"><input className='city'type='text' onChange={this.updateInput}/></td>\n              </tr>\n              <tr id=\"row8\">\n                <td id=\"cell8-0\"><label>State</label></td>\n                <td id=\"cell8-1\"><input className='state'type='text' onChange={this.updateInput}/></td>\n              </tr>\n              <tr id=\"row9\">\n                <td id=\"cell9-0\"><label>Zip</label></td>\n                <td id=\"cell9-1\"><input className='zip'type='text' onChange={this.updateInput}/></td>\n              </tr>\n            </table>\n            <br/><button type='submit' disabled={this.disableForm()} onClick={this.submitForm}> Sign Me Up! </button>\n          </form>\n        </div>\n        <Footer\n          path1='/signin'\n          path2='/'\n          label1='Sign In'\n          label2=\"Take Me Back\"\n          className='Profile-Footer'\n        />\n        {this.state.redirect && <Redirect to=\"/signin\"/>}\n      </div>\n    );\n  }\n}\n\nexport default SignUpPage;\n","/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/RecipeBook/RecipeBook.js",["108"],"import './RecipeBook.css';\nimport { Component } from 'react';\nimport {Link} from 'react-router-dom'\nimport RecipeCard from '../RecipeCard/RecipeCard'\nimport CallToAction from '../CallToAction/CallToAction.js'\nimport { getUserWithRecipes } from '../../APICalls.js'\nimport Footer from '../Footer/Footer'\n\nclass RecipeBook extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipes: [],\n      userRecipes: []\n    }\n  }\n  //refactor from a class based component to state\n  //refactor to more semantic naming/having easier logic\n  getRecipeSection = async (kind, id) =>  {\n    let results = await getUserWithRecipes(id)\n    let section;\n    if(!results.getUser[kind].length){\n      section = undefined\n    } else if (kind === 'recipes'){\n      let section = results.getUser[kind].map((recipe, index) => {\n        console.log(recipe)\n        return (\n          <RecipeCard\n          charityName={recipe.charityName}\n          description={recipe.description}\n          key={index}\n          id={recipe.id}\n          image={recipe.image}\n          title={recipe.title}\n          userId={recipe.userId}\n          rating={recipe.avgRating}\n          />\n        )\n      })\n      this.setState({[kind]: section})\n    } else if (kind === 'userRecipes'){\n      let section = results.getUser[kind].map((recipe, index) => {\n        return (\n          <RecipeCard\n          key={index}\n          id={recipe.recipe.id}\n          rating={recipe.recipe.avgRating}\n          recipeId={recipe.recipeId}\n          image={recipe.recipe.image}\n          title={recipe.recipe.title}\n          description={recipe.recipe.description}\n          charityName={recipe.recipe.charityName}\n          />\n        )\n      })\n      this.setState({[kind]: section})\n    }\n  }\n  componentDidMount(){\n    let user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      this.getRecipeSection('recipes', user.id)\n      this.getRecipeSection('userRecipes', user.id)\n    }\n  }\n  render(){\n    let storage = localStorage.getItem('user')\n    let user = storage ? JSON.parse(storage) : null\n    if (!user) {\n      return <CallToAction title='You need to be signed in to have a recipe book...' />\n    } else {\n      return (\n        <div className=\"RecipeBook\">\n          <section className='recipe-column'>\n            <h1 className='my-recipes'>Recipes you have uploaded: </h1>\n            <Link to='/recipeform' className='upload-Link'>Upload another recipe</Link>\n            <div className='recipe-section'>\n              {this.state.recipes || <p>You haven't uploaded any recipes</p>}\n            </div>\n          </section>\n          <section className='recipe-column'>\n            <h1>Recipes you have purchased: </h1>\n            <div className='recipe-section'>\n              {this.state.userRecipes || <p>You haven't purchased an recipes</p>}\n            </div>\n          </section>\n          <Footer\n            path1='/recipebook'\n            path2='/profilepage'\n            label1=\"My Recipe Book\"\n            label2='My Profile'\n            className='RecipeBook-Footer'\n          />\n        </div>\n      );\n    }\n  }\n}\n\nexport default RecipeBook;\n",["109","110"],"/Users/hashgari/Turing/mod_4/feed_the_people/Front-End/src/components/Profile/Profile.js",["111","112","113","114"],"import './Profile.css'\nimport {Link} from 'react-router-dom'\nimport recipeBook from '../../icons/recipe-book-icon.svg'\nimport globalIcon from '../../icons/global.svg'\nimport Footer from '../Footer/Footer'\n\nfunction Profile() {\n  let storage = localStorage.getItem('user')\n  let user = storage ? JSON.parse(storage) : null\n  return (\n    <div className=\"Profile\">\n      <section className='profileInfo'>\n        <h1 data-testid='welcomeMessage'>{`Welcome Back ${user.firstName}! `}</h1>\n        <div className='whoYouAre'>\n          <label>\n            <h3>Name: </h3> \n            <p data-testid='name'>{user.firstName} {user.lastName}</p>\n          </label>\n          <br/>\n          <label>\n            <h3>Username:</h3>\n            <p data-testid='username'>{user.username}</p>\n          </label>\n          <img data-testid='profileImg' src={user.image}/>\n        </div>\n        <label>\n          <h3>Email:</h3>\n          <p data-testid='email'>{user.email}</p>\n        </label>\n        <br/>\n        <label data-testid='address'>\n          <h3>Address:</h3>\n          <p>{user.street}</p>\n          <p>{user.city}, {user.state}</p>\n          <p>{user.zip}</p>\n        </label>\n      </section>\n      <Footer\n        path1='/recipebook'\n        path2='/profilepage'\n        label1=\"My Recipe Book\"\n        label2='My Profile'\n        className='Profile-Footer'\n      />\n    </div>\n  );\n}\n\nexport default Profile;\n",["115","116"],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":15},{"ruleId":"121","severity":1,"message":"125","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":18},{"ruleId":"121","severity":1,"message":"126","line":4,"column":9,"nodeType":"123","messageId":"124","endLine":4,"endColumn":13},{"ruleId":"121","severity":1,"message":"126","line":2,"column":9,"nodeType":"123","messageId":"124","endLine":2,"endColumn":13},{"ruleId":"121","severity":1,"message":"127","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":17},{"ruleId":"121","severity":1,"message":"128","line":4,"column":10,"nodeType":"123","messageId":"124","endLine":4,"endColumn":19},{"ruleId":"121","severity":1,"message":"129","line":4,"column":21,"nodeType":"123","messageId":"124","endLine":4,"endColumn":29},{"ruleId":"130","severity":1,"message":"131","line":14,"column":62,"nodeType":"132","messageId":"133","endLine":14,"endColumn":64},{"ruleId":"134","severity":1,"message":"135","line":34,"column":9,"nodeType":"136","endLine":34,"endColumn":79},{"ruleId":"121","severity":1,"message":"126","line":2,"column":9,"nodeType":"123","messageId":"124","endLine":2,"endColumn":13},{"ruleId":"121","severity":1,"message":"137","line":16,"column":10,"nodeType":"123","messageId":"124","endLine":16,"endColumn":28},{"ruleId":"121","severity":1,"message":"138","line":17,"column":10,"nodeType":"123","messageId":"124","endLine":17,"endColumn":20},{"ruleId":"121","severity":1,"message":"127","line":18,"column":10,"nodeType":"123","messageId":"124","endLine":18,"endColumn":17},{"ruleId":"121","severity":1,"message":"139","line":19,"column":10,"nodeType":"123","messageId":"124","endLine":19,"endColumn":26},{"ruleId":"121","severity":1,"message":"140","line":20,"column":10,"nodeType":"123","messageId":"124","endLine":20,"endColumn":26},{"ruleId":"121","severity":1,"message":"141","line":21,"column":10,"nodeType":"123","messageId":"124","endLine":21,"endColumn":32},{"ruleId":"121","severity":1,"message":"142","line":22,"column":10,"nodeType":"123","messageId":"124","endLine":22,"endColumn":26},{"ruleId":"121","severity":1,"message":"143","line":23,"column":10,"nodeType":"123","messageId":"124","endLine":23,"endColumn":22},{"ruleId":"121","severity":1,"message":"144","line":24,"column":10,"nodeType":"123","messageId":"124","endLine":24,"endColumn":20},{"ruleId":"121","severity":1,"message":"145","line":25,"column":10,"nodeType":"123","messageId":"124","endLine":25,"endColumn":22},{"ruleId":"121","severity":1,"message":"146","line":29,"column":10,"nodeType":"123","messageId":"124","endLine":29,"endColumn":20},{"ruleId":"121","severity":1,"message":"147","line":30,"column":10,"nodeType":"123","messageId":"124","endLine":30,"endColumn":26},{"ruleId":"121","severity":1,"message":"148","line":31,"column":10,"nodeType":"123","messageId":"124","endLine":31,"endColumn":22},{"ruleId":"117","replacedBy":"149"},{"ruleId":"119","replacedBy":"150"},{"ruleId":"121","severity":1,"message":"151","line":28,"column":11,"nodeType":"123","messageId":"124","endLine":28,"endColumn":19},{"ruleId":"121","severity":1,"message":"152","line":43,"column":9,"nodeType":"123","messageId":"124","endLine":43,"endColumn":15},{"ruleId":"121","severity":1,"message":"153","line":5,"column":42,"nodeType":"123","messageId":"124","endLine":5,"endColumn":59},{"ruleId":"121","severity":1,"message":"126","line":2,"column":9,"nodeType":"123","messageId":"124","endLine":2,"endColumn":13},{"ruleId":"121","severity":1,"message":"154","line":23,"column":7,"nodeType":"123","messageId":"124","endLine":23,"endColumn":14},{"ruleId":"117","replacedBy":"155"},{"ruleId":"119","replacedBy":"156"},{"ruleId":"121","severity":1,"message":"126","line":2,"column":9,"nodeType":"123","messageId":"124","endLine":2,"endColumn":13},{"ruleId":"121","severity":1,"message":"125","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":18},{"ruleId":"121","severity":1,"message":"157","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":24,"column":11,"nodeType":"136","endLine":24,"endColumn":59},{"ruleId":"117","replacedBy":"158"},{"ruleId":"119","replacedBy":"159"},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'profile' is defined but never used.","Identifier","unusedVar","'recipeBook' is defined but never used.","'Link' is defined but never used.","'getUser' is defined but never used.","'Component' is defined but never used.","'Redirect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getUserWithRecipes' is defined but never used.","'recipeById' is defined but never used.","'createIngredient' is defined but never used.","'createUserRecipe' is defined but never used.","'updateUserRecipeRating' is defined but never used.","'searchNonProfits' is defined but never used.","'registerUser' is defined but never used.","'userSignIn' is defined but never used.","'createRecipe' is defined but never used.","'updateUser' is defined but never used.","'updateIngredient' is defined but never used.","'updateRecipe' is defined but never used.",["160"],["161"],"'response' is assigned a value but never used.","'result' is assigned a value but never used.","'getAccessToRecipe' is defined but never used.","'section' is assigned a value but never used.",["160"],["161"],"'globalIcon' is defined but never used.",["160"],["161"],"no-global-assign","no-unsafe-negation"]
